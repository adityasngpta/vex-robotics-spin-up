{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nimport math\nimport random\nfrom vexcode_vrc import *\nfrom vexcode_vrc.events import get_Task_func\n  \n# constructors\n\ndrivetrain = Drivetrain()\nbrain = Brain()\nbottom_distance = Distance(\"BottomDistance\", 18)\nroller_optical = Optical(\"RollerOptical\", 2)\ngps = GPS(\"GPS\", 3)\nintake_motor_group = Motor(\"IntakeMotorGroup\", 10)\nbottom_line_tracker = LineTracker(\"BottomLineTracker\", 22)\nmiddle_line_tracker = LineTracker(\"MiddleLineTracker\", 23)\ntop_line_tracker = LineTracker(\"TopLineTracker\", 24)\n#endregion VEXcode Generated Robot Configuration\n\n\n\"\"\"\n10-29-2022 v1\nChange list:\n - made more of the route\nWorking on\n - coding the route\n\ncurrent score: 165 pts (33 sec stop)\n\"\"\"\n\nvexcode_brain_precision = 0\nunfixedHeading = 0\n\ndef turnToBlueHighGoal():\n    global vexcode_brain_precision\n    unfixedHeading = math.atan((-1330 - gps.y_position(MM)) / (-1330 - gps.x_position(MM))) / math.pi * 180\n    if gps.y_position(MM) > -1330 and gps.x_position(MM) > -1330:\n        drivetrain.turn_to_heading((-1 * unfixedHeading), DEGREES, wait=True)\n    elif gps.y_position(MM) > -1330 and gps.x_position(MM) < -1330:\n        drivetrain.turn_to_heading(-180 - unfixedHeading, DEGREES, wait=True)\n    elif gps.y_position(MM) < -1330 and gps.x_position(MM) > -1330:\n        drivetrain.turn_to_heading(-unfixedHeading, DEGREES, wait=True)\n\ndef turnToRedHighGoal():\n    global vexcode_brain_precision\n    unfixedHeading = math.atan((1330 - gps.y_position(MM)) / (1330 - gps.x_position(MM))) / math.pi * 180\n    if gps.y_position(MM) < 1330 and gps.x_position(MM) < 1330:\n        drivetrain.turn_to_heading((180 - unfixedHeading), DEGREES, wait=True)\n    elif gps.y_position(MM) < 1330 and gps.x_position(MM) > 1330:\n        drivetrain.turn_to_heading(360 - unfixedHeading, DEGREES, wait=True)\n    elif gps.y_position(MM) > 1330 and gps.x_position(MM) < 1330:\n        drivetrain.turn_to_heading(540 - unfixedHeading, DEGREES, wait=True)\n\ndef when_started1():\n    global vexcode_brain_precision\n    drivetrain.set_drive_velocity(100, PERCENT)\n    intake_motor_group.set_velocity(100, PERCENT)\n    drivetrain.set_turn_velocity(100, PERCENT)\n    \"\"\"\n    drivetrain.drive_for(FORWARD, 45, INCHES, wait=True)\n    drivetrain.turn_to_heading(-90, DEGREES, wait=True)\n    drivetrain.drive_for(FORWARD, 75, INCHES, wait=True)\n    \"\"\"\n    turnToRedHighGoal()\n    intake_motor_group.spin(REVERSE)\n    brain.screen.print(drivetrain.heading(DEGREES))\n    brain.screen.next_row()\n\ndef code():\n    drivetrain.set_drive_velocity(100, PERCENT)\n    intake_motor_group.set_velocity(100, PERCENT)\n    drivetrain.set_turn_velocity(100, PERCENT)\n\n    turnToBlueHighGoal()\n    intake_motor_group.spin(REVERSE)\n    drivetrain.drive_for(FORWARD, 13.8, INCHES, wait=True)\n    wait(1.2, SECONDS)\n\n    drivetrain.turn_to_heading(0, DEGREES, wait=True)\n    drivetrain.drive_for(REVERSE, 1, INCHES, wait=True)\n    wait(0.18, SECONDS)\n    intake_motor_group.stop()\n\n    drivetrain.turn_to_heading(0, DEGREES, wait=True)\n    drivetrain.drive_for(FORWARD, 3, INCHES, wait=True)\n    intake_motor_group.spin(REVERSE)\n    drivetrain.drive_for(FORWARD, 0.4, INCHES, wait=True)\n    turnToBlueHighGoal()\n    wait(0.75, SECONDS)\n\n    drivetrain.turn_to_heading(-20, DEGREES, wait=True)\n    drivetrain.drive_for(FORWARD, 20, INCHES, wait=True)\n    drivetrain.turn_to_heading(90, DEGREES, wait=True)\n    drivetrain.drive_for(REVERSE, 2, INCHES, wait=True)\n    wait(0.18, SECONDS)\n\n    drivetrain.turn_to_heading(90, DEGREES, wait=True)\n    drivetrain.drive_for(FORWARD, 17, INCHES, wait=True)\n    wait(0.6, SECONDS)\n    turnToRedHighGoal()\n    intake_motor_group.set_velocity(95, PERCENT)\n    wait(0.9, SECONDS)\n    intake_motor_group.set_velocity(100, PERCENT)\n\n    drivetrain.turn_to_heading(12, DEGREES, wait=True)\n    drivetrain.drive_for(FORWARD, 16, INCHES, wait=True)\n    drivetrain.turn_to_heading(35, DEGREES, wait=False)\n    wait(0.2, SECONDS)\n    intake_motor_group.stop()\n    drivetrain.drive_for(FORWARD, 15.6, INCHES, wait=True)\n    intake_motor_group.spin(REVERSE)\n    drivetrain.drive_for(FORWARD, 0.4, INCHES, wait=True)\n    drivetrain.turn_to_heading(40, DEGREES, wait=False)\n    wait(0.2, SECONDS)\n    intake_motor_group.stop()\n    drivetrain.drive_for(FORWARD, 16, INCHES, wait=True)\n    intake_motor_group.spin(REVERSE)\n    drivetrain.drive_for(FORWARD, 0.6, INCHES, wait=True)\n    wait(0.2, SECONDS)\n    intake_motor_group.stop()\n    turnToBlueHighGoal()\n    intake_motor_group.spin(REVERSE)\n    wait(1.2, SECONDS)\n\n    drivetrain.turn_to_heading(-72, DEGREES, wait=True)\n    drivetrain.drive_for(FORWARD, 30, INCHES, wait=True)\n    drivetrain.turn_to_heading(77, DEGREES, wait=True)\n    intake_motor_group.stop()\n    drivetrain.drive_for(FORWARD, 5, INCHES, wait=True)\n    intake_motor_group.spin(REVERSE)\n    wait(0.1, SECONDS)\n    drivetrain.drive_for(FORWARD, 9.8, INCHES, wait=True)\n    turnToRedHighGoal()\n    wait(1, SECONDS)\n\n    drivetrain.turn_to_heading(90, DEGREES, wait=True)\n    drivetrain.drive_for(FORWARD, (gps.y_position(MM) - 460), MM, wait=True)\n    brain.screen.print(gps.y_position(MM))\n    brain.screen.next_row()\n    drivetrain.turn_to_heading(-5.5, DEGREES, wait=True)\n    intake_motor_group.spin(REVERSE)\n    drivetrain.drive_for(FORWARD, 4, INCHES, wait=True)\n    wait(0.1, SECONDS)\n    drivetrain.drive_for(FORWARD, 17.9, INCHES, wait=True)\n    wait(0.1, SECONDS)\n    intake_motor_group.stop()\n    drivetrain.turn_to_heading(20, DEGREES, wait=True)\n    drivetrain.drive_for(FORWARD, 23.5, INCHES, wait=True)\n    turnToRedHighGoal()\n    intake_motor_group.spin(REVERSE)\n    drivetrain.drive_for(FORWARD, 5, INCHES, wait=True)\n    wait(4, SECONDS)\n\n    drivetrain.turn_to_heading(140, DEGREES, wait=True)\n    drivetrain.drive_for(FORWARD, 20.5, INCHES, wait=True)\n    wait(0.7, SECONDS)\n    intake_motor_group.stop()\n    drivetrain.drive_for(FORWARD, 2, INCHES, wait=True)\n    turnToRedHighGoal()\n    intake_motor_group.set_velocity(95, PERCENT)\n    intake_motor_group.spin(REVERSE)\n    drivetrain.drive_for(FORWARD, 23.6, INCHES, wait=True)\n    wait(1.9, SECONDS)\n    intake_motor_group.stop()\n    intake_motor_group.set_velocity(100, PERCENT)\n\nvr_thread(code)","textLanguage":"python","rconfig":[],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.0","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","target":"Virtual","virtualSkillsYear":"2023"}