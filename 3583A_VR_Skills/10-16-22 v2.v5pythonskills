{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nimport math\nimport random\nfrom vexcode_vrc import *\nfrom vexcode_vrc.events import get_Task_func\n  \n# constructors\n\ndrivetrain = Drivetrain()\nbrain = Brain()\nbottom_distance = Distance(\"BottomDistance\", 18)\nroller_optical = Optical(\"RollerOptical\", 2)\ngps = GPS(\"GPS\", 3)\nintake_motor_group = Motor(\"IntakeMotorGroup\", 10)\nbottom_line_tracker = LineTracker(\"BottomLineTracker\", 22)\nmiddle_line_tracker = LineTracker(\"MiddleLineTracker\", 23)\ntop_line_tracker = LineTracker(\"TopLineTracker\", 24)\n#endregion VEXcode Generated Robot Configuration\n\n\"\"\"\n10-16-2022 v2\nChange list:\n - made the turnToHighGoal function\n - it only shoots at the blue one\nTo do:\n - make it work for the red goal\n\"\"\"\n\nvexcode_brain_precision = 0\nunfixedHeading = 0\n\ndef TurnToHighGoal():\n    global vexcode_brain_precision\n    unfixedHeading = math.atan((-1330 - gps.y_position(MM)) / (-1330 - gps.x_position(MM))) / math.pi * 180\n    if gps.y_position(MM) > -1330 and gps.x_position(MM) > -1330:\n        #drivetrain.turn_to_heading((-1 * unfixedHeading), DEGREES, wait=True)\n        pass\n    elif gps.y_position(MM) > -1330 and gps.x_position(MM) < -1330:\n        #drivetrain.turn_to_heading(-90 + (-90 - unfixedHeading), DEGREES, wait=True)\n        pass\n    elif gps.y_position(MM) < -1330 and gps.x_position(MM) > -1330:\n        brain.screen.print(drivetrain.heading(DEGREES))\n        brain.screen.print(\"potato\")\n        drivetrain.turn_to_heading(-unfixedHeading, DEGREES, wait=True)\n\ndef when_started1():\n    global vexcode_brain_precision\n    drivetrain.set_drive_velocity(100, PERCENT)\n    intake_motor_group.set_velocity(100, PERCENT)\n    drivetrain.set_turn_velocity(100, PERCENT)\n    \n    drivetrain.drive_for(FORWARD, 75, INCHES, wait=True)\n    drivetrain.turn_to_heading(90, DEGREES, wait=True)\n    drivetrain.drive_for(FORWARD, 45, INCHES, wait=True)\n    \n    brain.screen.print(gps.y_position(MM))\n    brain.screen.next_row()\n    brain.screen.print(gps.x_position(MM))\n    TurnToHighGoal()\n    intake_motor_group.spin(REVERSE)\n    brain.screen.next_row()\n\nvr_thread(when_started1)\n","textLanguage":"python","rconfig":[],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"","minVersion":"2.4.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","target":"Virtual","virtualSkillsYear":"2023"}